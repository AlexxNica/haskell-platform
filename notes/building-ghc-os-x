Building GHC for the Platform on OS X
-------------------------------------

PREP
====

[] Need autoconf and automake installed
    get from http://mirrors.kernel.org/gnu/autoconf/
    get from http://mirrors.kernel.org/gnu/automake/
    needn't be latest, really
    untar, configure, make, make install (should put in /usr/local)
        - first autoconf, then automake

[] Need lastest tools
    cabal update
    cabal install happy
    cabal install alex
    cabal install HsColour

    make sure all on your PATH

[] Need DocBook XML DTD & XSL
    download http://www.oasis-open.org/docbook/xml/4.5/docbook-xml-4.5.zip
    download http://www.oasis-open.org/docbook/xml/4.2/docbook-xml-4.2.zip
    download docbook xsl package (don't run the included install script!)
    put both in /usr/local/share/xml/
    edit the catalog file for the dtd to have xml:base:
        <catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog" prefer="public"
            xml:base="file:///usr/local/share/xml/docbook-xml-4.5/">

    set up /etc/xml/catalog file to be using some mangled magic of xmlcatalog to:
        <?xml version="1.0"?>
        <!DOCTYPE catalog PUBLIC "-//OASIS//DTD Entity Resolution XML Catalog V1.0//EN" "http://www.oasis-open.org/committees/entity/release/1.0/catalog.dtd">
        <catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog">
          <nextCatalog catalog="file:///usr/local/share/xml/docbook-xml-4.2/catalog.xml"/>
          <nextCatalog catalog="file:///usr/local/share/xml/docbook-xml-4.5/catalog.xml"/>
          <nextCatalog catalog="file:///usr/local/share/xml/docbook-xsl-1.78.1/catalog.xml"/>
        </catalog>

[] BUG: There is inconsistent usage of docbookx DTD
    - some use 4.5
    - some use 4.2
    - the configure script only checks for 4.5
    - the following files reference docbookx.xml DTD versions:
        aclocal.m4
        docs/docbook-cheat-sheet/docbook-cheat-sheet.xml
        docs/users_guide/users_guide.xml
        docs/vh/vh.xml
        libraries/Win32/doc/HSWin32.xml
        utils/haddock/doc/aclocal.m4
        utils/haddock/doc/haddock.xml
        utils/mkUserGuidePart/Main.hs


THE BUILD
=========

if git repo
    make distclean
    ./boot
else
    expand out the src tar ball
fi

export MACOSX_DEPLOYMENT_TARGET=10.6
./configure 2>&1 | tee ../conf.log
vi mk/build.mk
    ~ ~ ~ ~ ~ ~ ~
    V=1
    SplitObjs=YES
    SupportsSplitObjs=YES
    HADDOCK_DOCS=YES
    LATEX_DOCS=NO
    HSCOLOUR_SRCS=YES
    BUILD_DOCBOOK_HTML=YES
    BUILD_DOCBOOK_PDF=NO
    BUILD_DOCBOOK_PS=NO
    BeConservative=YES
    ~ ~ ~ ~ ~ ~ ~
caffeinate time make -j4 2>&1 | tee  ../make.log
caffeinate time make binary-dist 2>&1 | tee  ../bd.log


TADA!




Older Mac Notes
---------------

OLDER
    export MACOSX_DEPLOYMENT_TARGET=10.6
    # same as -mmacosx-version-min=10.6
    ./configure --with-gcc=/usr/bin/ghc-clang-wrapper 2>&1 | tee ../conf.log

With carter's patch installed, the settings on 10.7 (gcc) are:

    [("GCC extra via C opts", " -fwrapv"),
     ("C compiler command", "/usr/bin/gcc"),
     ("C compiler flags", " -m64 -fno-stack-protector"),
     ("C compiler link flags", " -m64"),
     ("Haskell CPP command","/usr/bin/gcc"),
     ("Haskell CPP flags","-E -undef -traditional "),
     ("ld command", "/usr/bin/ld"),
     ("ld flags", " -arch x86_64"),
     ("ld supports compact unwind", "YES"),
     ("ld supports build-id", "NO"),
     ("ld supports filelist", "YES"),
     ("ld is GNU ld", "NO"),
     ("ar command", "/usr/bin/ar"),
     ("ar flags", "clqs"),
     ("ar supports at file", "NO"),
     ("touch command", "touch"),
     ("dllwrap command", "/bin/false"),
     ("windres command", "/bin/false"),
     ("libtool command", "libtool"),
     ("perl command", "/usr/bin/perl"),
     ("target os", "OSDarwin"),
     ("target arch", "ArchX86_64"),
     ("target word size", "8"),
     ("target has GNU nonexec stack", "False"),
     ("target has .ident directive", "True"),
     ("target has subsections via symbols", "True"),
     ("Unregisterised", "NO"),
     ("LLVM llc command", "llc"),
     ("LLVM opt command", "opt")
     ]

on 10.9 (clang) they are:

    [("GCC extra via C opts", " -fwrapv"),
     ("C compiler command", "/usr/bin/gcc"),
     ("C compiler flags", " -m64 -fno-stack-protector"),
     ("C compiler link flags", " -m64"),
     ("Haskell CPP command","/usr/bin/gcc"),
     ("Haskell CPP flags","-E -undef -traditional -Wno-invalid-pp-token -Wno-unicode -Wno-trigraphs "),
     ("ld command", "/usr/bin/ld"),
     ("ld flags", " -arch x86_64"),
     ("ld supports compact unwind", "YES"),
     ("ld supports build-id", "NO"),
     ("ld supports filelist", "YES"),
     ("ld is GNU ld", "NO"),
     ("ar command", "/usr/bin/ar"),
     ("ar flags", "clqs"),
     ("ar supports at file", "NO"),
     ("touch command", "touch"),
     ("dllwrap command", "/bin/false"),
     ("windres command", "/bin/false"),
     ("libtool command", "libtool"),
     ("perl command", "/usr/bin/perl"),
     ("target os", "OSDarwin"),
     ("target arch", "ArchX86_64"),
     ("target word size", "8"),
     ("target has GNU nonexec stack", "False"),
     ("target has .ident directive", "True"),
     ("target has subsections via symbols", "True"),
     ("Unregisterised", "NO"),
     ("LLVM llc command", "llc"),
     ("LLVM opt command", "opt")
     ]


Haskell CPP flags is determined at GHC build time & at install time by:

  $HaskellCPPCmd -x c /dev/null -dM -E > conftest.txt 2>&1
  if grep "__clang__" conftest.txt >/dev/null 2>&1; then
    HaskellCPPArgs="-E -undef -traditional -Wno-invalid-pp-token -Wno-unicode -Wno-trigraphs "
  else
      $HaskellCPPCmd  -v > conftest.txt 2>&1
      if  grep "gcc" conftest.txt >/dev/null 2>&1; then
          HaskellCPPArgs="-E -undef -traditional "
        else
          $HaskellCPPCmd  --version > conftest.txt 2>&1
          if grep "cpphs" conftest.txt >/dev/null 2>&1; then
            HaskellCPPArgs="--cpp -traditional"
          else
            AC_MSG_WARN([configure can't recognize your CPP program, you may need to set --with-hs-cpp-flags=FLAGS explicitly])
            HaskellCPPArgs=""
          fi
      fi
  fi



Bug in how ./configure decides which version of Xcode, and hence SPLIT_OBJS:

XCodeVersion=`xcodebuild -version | grep Xcode | sed "s/Xcode //"`


SplitObjsBroken=NO
if test "$TargetOS_CPP" = "darwin"
then
    # Split objects is broken (#4013) with XCode < 3.2
    if test "$XCodeVersion1" -lt 3
    then
        SplitObjsBroken=YES
    else
        if test "$XCodeVersion1" -eq 3
        then
            if test "$XCodeVersion2" -lt 2
            then
                SplitObjsBroken=YES
            fi
        fi
    fi
fi


compiler-ghc.mk:    --> mk/sub-makefile.mk

config.mk:          --> mk/project.mk
config.mk:          --> mk/install.mk

custom-settings.mk: --> mk/are-validating.mk
custom-settings.mk: --> mk/validate-settings.mk
custom-settings.mk: --> mk/validate.mk
custom-settings.mk: --> mk/$(TargetPlatformFull)-build.mk
custom-settings.mk: --> mk/build.mk)
custom-settings.mk: --> bindist.mk


